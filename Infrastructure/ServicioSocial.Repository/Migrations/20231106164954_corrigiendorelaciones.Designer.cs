// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicioSocial.Repository;

#nullable disable

namespace ServicioSocial.Repository.Migrations
{
    [DbContext(typeof(ServicioSocialContext))]
    [Migration("20231106164954_corrigiendorelaciones")]
    partial class corrigiendorelaciones
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ServicioSocial.Entities.Commune", b =>
                {
                    b.Property<int>("CommuneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommuneId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("CommuneId");

                    b.HasIndex("RegionId");

                    b.ToTable("Communes", (string)null);
                });

            modelBuilder.Entity("ServicioSocial.Entities.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries", (string)null);
                });

            modelBuilder.Entity("ServicioSocial.Entities.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"), 1L, 1);

                    b.Property<string>("Action")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("ServicioSocial.Entities.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions", (string)null);
                });

            modelBuilder.Entity("ServicioSocial.Entities.SocialAssistance", b =>
                {
                    b.Property<int>("SocialAssistanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocialAssistanceId"), 1L, 1);

                    b.Property<DateTime>("DateOfAssignment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SocialServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SocialAssistanceId");

                    b.HasIndex("SocialServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("SocialAssistences", (string)null);
                });

            modelBuilder.Entity("ServicioSocial.Entities.SocialService", b =>
                {
                    b.Property<int>("SocialServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SocialServiceId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("SocialServiceId");

                    b.ToTable("SocialServices", (string)null);
                });

            modelBuilder.Entity("ServicioSocial.Entities.SocialServiceCommune", b =>
                {
                    b.Property<int>("SocialServideId")
                        .HasColumnType("int");

                    b.Property<int>("CommuneId")
                        .HasColumnType("int");

                    b.Property<int?>("SocialServiceId")
                        .HasColumnType("int");

                    b.HasKey("SocialServideId", "CommuneId");

                    b.HasIndex("CommuneId");

                    b.HasIndex("SocialServiceId");

                    b.ToTable("SocialServiceCommunes");
                });

            modelBuilder.Entity("ServicioSocial.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CommuneId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("CommuneId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("ServicioSocial.Entities.Commune", b =>
                {
                    b.HasOne("ServicioSocial.Entities.Region", "Region")
                        .WithMany("Communes")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("ServicioSocial.Entities.Region", b =>
                {
                    b.HasOne("ServicioSocial.Entities.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ServicioSocial.Entities.SocialAssistance", b =>
                {
                    b.HasOne("ServicioSocial.Entities.SocialService", "SocialService")
                        .WithMany("SocialAssistances")
                        .HasForeignKey("SocialServiceId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("ServicioSocial.Entities.User", "User")
                        .WithMany("SocialAssistances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("SocialService");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ServicioSocial.Entities.SocialServiceCommune", b =>
                {
                    b.HasOne("ServicioSocial.Entities.Commune", "Commune")
                        .WithMany("SocialServiceCommunes")
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServicioSocial.Entities.SocialService", "SocialService")
                        .WithMany("SocialServiceCommunes")
                        .HasForeignKey("SocialServiceId");

                    b.Navigation("Commune");

                    b.Navigation("SocialService");
                });

            modelBuilder.Entity("ServicioSocial.Entities.User", b =>
                {
                    b.HasOne("ServicioSocial.Entities.Commune", "Commune")
                        .WithMany("Users")
                        .HasForeignKey("CommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commune");
                });

            modelBuilder.Entity("ServicioSocial.Entities.Commune", b =>
                {
                    b.Navigation("SocialServiceCommunes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ServicioSocial.Entities.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("ServicioSocial.Entities.Region", b =>
                {
                    b.Navigation("Communes");
                });

            modelBuilder.Entity("ServicioSocial.Entities.SocialService", b =>
                {
                    b.Navigation("SocialAssistances");

                    b.Navigation("SocialServiceCommunes");
                });

            modelBuilder.Entity("ServicioSocial.Entities.User", b =>
                {
                    b.Navigation("SocialAssistances");
                });
#pragma warning restore 612, 618
        }
    }
}
